{"version":3,"sources":["../../src/repositories/comments-repository.js"],"names":["model","author","email","comment","movieId","query","insert","name","movie_id","joinRelation"],"mappings":";;;;;;;;;;;;;;;;;;;;AACE,oBAAYA,KAAZ,EAAmB;AAAA;;AACjB,SAAKA,KAAL,GAAaA,KAAb;AACD;;;;;;;+CAEYC,M,EAAQC,K,EAAOC,O,EAASC,O;;;;;;uBAC7B,KAAKJ,KAAL,CAAWK,KAAX,GAAmBC,MAAnB,CAA0B;AAC9BC,kBAAAA,IAAI,EAAEN,MADwB;AAE9BC,kBAAAA,KAAK,EAALA,KAF8B;AAG9BC,kBAAAA,OAAO,EAAPA,OAH8B;AAI9BK,kBAAAA,QAAQ,EAAEJ;AAJoB,iBAA1B,C;;;;;;;;;;;;;;;;;;;;;;;;;;kDASC,KAAKJ,KAAL,CAAWK,KAAX,GAAmBI,YAAnB,CAAgC,OAAhC,C","sourcesContent":["export default class {\n  constructor(model) {\n    this.model = model\n  }\n\n  async create(author, email, comment, movieId) {\n    await this.model.query().insert({\n      name: author,\n      email,\n      comment,\n      movie_id: movieId\n    })\n  }\n\n  async listAll () {\n    return this.model.query().joinRelation('movie')\n  }\n}\n"],"file":"comments-repository.js"}