{"version":3,"sources":["../../src/repositories/movies-repository.js"],"names":["model","title","year","plot","genre","country","imdbID","query","insert","where"],"mappings":";;;;;;;;;;;;;;;;;;;;AACE,oBAAaA,KAAb,EAAoB;AAAA;;AAClB,SAAKA,KAAL,GAAaA,KAAb;AACD;;;;;;;+CAEYC,K,EAAOC,I,EAAMC,I,EAAMC,K,EAAOC,O,EAASC,M;;;;;iDACvC,KAAKN,KAAL,CAAWO,KAAX,GAAmBC,MAAnB,CAA0B;AAC/BP,kBAAAA,KAAK,EAALA,KAD+B;AACxBC,kBAAAA,IAAI,EAAJA,IADwB;AAClBC,kBAAAA,IAAI,EAAJA,IADkB;AACZC,kBAAAA,KAAK,EAALA,KADY;AACLC,kBAAAA,OAAO,EAAPA,OADK;AACIC,kBAAAA,MAAM,EAANA;AADJ,iBAA1B,C;;;;;;;;;;;;;;;;;;;;;;;;;;kDAMA,KAAKN,KAAL,CAAWO,KAAX,E;;;;;;;;;;;;;;;;;;;;;gDAGSD,M;;;;;kDACT,KAAKN,KAAL,CAAWO,KAAX,GAAmBE,KAAnB,CAAyB,QAAzB,EAAmCH,MAAnC,C","sourcesContent":["export default class {\n  constructor (model) {\n    this.model = model\n  }\n\n  async create(title, year, plot, genre, country, imdbID) {\n    return this.model.query().insert({\n      title, year, plot, genre, country, imdbID\n    })\n  }\n\n  async listAll () {\n    return this.model.query()\n  }\n\n  async existsInDb (imdbID) {\n    return this.model.query().where('imdbID', imdbID)\n  }\n}\n"],"file":"movies-repository.js"}