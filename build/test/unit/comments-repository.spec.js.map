{"version":3,"sources":["../../../src/test/unit/comments-repository.spec.js"],"names":["describe","repository","CommentsRepository","Comment","queryMockService","insert","joinRelation","it","mock","sinon","queryMock","expects","returns","once","create","verify","restore","withArgs","listAll"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,QAAQ,CAAC,iCAAD;AAAA;AAAA;AAAA;AAAA,wBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AACpCC,UAAAA,UADoC,GACvB,IAAIC,8BAAJ,CAAuBC,mBAAvB,CADuB;AAEpCC,UAAAA,gBAFoC,GAEjB;AACjBC,YAAAA,MADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEjBC,YAAAA,YAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WAFiB;AAQ1CC,UAAAA,EAAE,CAAC,+BAAD;AAAA;AAAA;AAAA;AAAA,kCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,oBAAAA,IAD4B,GACrBC,kBAAMD,IAAN,CAAWL,mBAAX,CADqB;AAE5BO,oBAAAA,SAF4B,GAEhBD,kBAAMD,IAAN,CAAWJ,gBAAX,CAFgB;AAIlCI,oBAAAA,IAAI,CAACG,OAAL,CAAa,OAAb,EAAsBC,OAAtB,CAA8BR,gBAA9B,EAAgDS,IAAhD;AACAH,oBAAAA,SAAS,CAACC,OAAV,CAAkB,QAAlB,EAA4BE,IAA5B;AALkC;AAAA,2BAM5BZ,UAAU,CAACa,MAAX,EAN4B;;AAAA;AAOlCN,oBAAAA,IAAI,CAACO,MAAL;AACAP,oBAAAA,IAAI,CAACQ,OAAL;AACAN,oBAAAA,SAAS,CAACM,OAAV;;AATkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAlC,GAAF;AAYAT,UAAAA,EAAE,CAAC,6BAAD;AAAA;AAAA;AAAA;AAAA,kCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,oBAAAA,IAD0B,GACnBC,kBAAMD,IAAN,CAAWL,mBAAX,CADmB;AAE1BO,oBAAAA,SAF0B,GAEdD,kBAAMD,IAAN,CAAWJ,gBAAX,CAFc;AAIhCI,oBAAAA,IAAI,CAACG,OAAL,CAAa,OAAb,EAAsBC,OAAtB,CAA8BR,gBAA9B,EAAgDS,IAAhD;AACAH,oBAAAA,SAAS,CAACC,OAAV,CAAkB,cAAlB,EAAkCM,QAAlC,CAA2C,OAA3C,EAAoDJ,IAApD;AALgC;AAAA,2BAM1BZ,UAAU,CAACiB,OAAX,EAN0B;;AAAA;AAOhCV,oBAAAA,IAAI,CAACO,MAAL;AACAP,oBAAAA,IAAI,CAACQ,OAAL;AACAN,oBAAAA,SAAS,CAACM,OAAV;;AATgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAhC,GAAF;;AApB0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApC,GAAR","sourcesContent":["import assert from 'assert'\nimport sinon from 'sinon'\nimport CommentsRepository from '../../repositories/comments-repository'\nimport Comment from '../../models/comment'\n\ndescribe('Should check CommentsRepository', async () => {\n  const repository = new CommentsRepository(Comment)\n  const queryMockService = {\n    async insert() {},\n    async joinRelation() {}\n  }\n\n\n  it('check calling create function', async () => {\n    const mock = sinon.mock(Comment)\n    const queryMock = sinon.mock(queryMockService)\n\n    mock.expects(\"query\").returns(queryMockService).once()\n    queryMock.expects(\"insert\").once()\n    await repository.create()\n    mock.verify();\n    mock.restore()\n    queryMock.restore()\n  })\n\n  it('check calling list function', async () => {\n    const mock = sinon.mock(Comment)\n    const queryMock = sinon.mock(queryMockService)\n\n    mock.expects(\"query\").returns(queryMockService).once()\n    queryMock.expects(\"joinRelation\").withArgs('movie').once()\n    await repository.listAll()\n    mock.verify();\n    mock.restore()\n    queryMock.restore()\n  })\n})\n"],"file":"comments-repository.spec.js"}