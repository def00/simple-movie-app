{"version":3,"sources":["../../../src/test/unit/movie-serializer.spec.js"],"names":["chai","use","chaiAsPromised","describe","movie","movieData","it","wrongInput","expect","to","be","rejectedWith","Error","data","id","eq","title","year","plot","genre","country","an"],"mappings":"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","sourcesContent":["import movieSerializer from '../../services/serializers/movie-serializer'\nimport chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised'\nimport createMovie from './data-providers/create-movie'\nimport movieData from './data-providers/movie'\n\nchai.use(chaiAsPromised)\n\ndescribe('Should test movieSerailizer', async () => {\n  const movie = createMovie(movieData)\n\n  it('check throwing error when from arguments provided', async () => {\n    const wrongInput = {}\n    await chai.expect(movieSerializer(wrongInput)).to.be.rejectedWith(Error)\n  })\n\n  it('check returning value when proper arguments provided', async () => {\n    const data = await movieSerializer(movie)\n\n    chai.expect(data.id).to.be.eq(movieData.id)\n    chai.expect(data.title).to.be.eq(movieData.title)\n    chai.expect(data.year).to.be.eq(movieData.year)\n    chai.expect(data.plot).to.be.eq(movieData.plot)\n    chai.expect(data.genre).to.be.eq(movieData.genre)\n    chai.expect(data.year).to.be.eq(movieData.year)\n    chai.expect(data.country).to.be.eq(movieData.country)\n  })\n\n  it('check returning value when proper arguments provided with deep = false', async () => {\n    const data = await movieSerializer(movie, false)\n\n    chai.expect(data.title).to.be.eq(movieData.title)\n    chai.expect(data.year).to.be.eq(movieData.year)\n    chai.expect(data.id).to.be.an('undefined')\n    chai.expect(data.plot).to.be.an('undefined')\n    chai.expect(data.genre).to.be.an('undefined')\n    chai.expect(data.country).to.be.an('undefined')\n  })\n})\n"],"file":"movie-serializer.spec.js"}