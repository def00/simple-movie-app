{"version":3,"sources":["../../../src/test/unit/movies-search.spec.js"],"names":["chai","use","chaiAsPromised","describe","it","spy","sinon","search","MovieSearch","calledOnce"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,iBAAKC,GAAL,CAASC,0BAAT;;AAEAC,QAAQ,CAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,wBAA6B;AAAA;AAAA;AAAA;AAAA;AACnCC,UAAAA,EAAE,CAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,kCAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,oBAAAA,GADoB,GACdC,kBAAMD,GAAN,EADc;AAEpBE,oBAAAA,MAFoB,GAEX,IAAIC,wBAAJ,CAAgBH,GAAhB,CAFW;AAAA;AAAA,2BAGpBE,MAAM,CAACA,MAAP,CAAc,OAAd,CAHoB;;AAAA;AAI1B,4CAAOF,GAAG,CAACI,UAAX;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA1B,GAAF;;AADmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B,GAAR","sourcesContent":["import chai from 'chai'\nimport chaiAsPromised from 'chai-as-promised'\nimport MovieSearch from '../../services/movies-search'\nimport sinon from 'sinon'\nimport assert from 'assert'\n\nchai.use(chaiAsPromised)\n\ndescribe('Should test MoviesSearch', async () => {\n  it('check calling request', async () => {\n    const spy = sinon.spy()\n    const search = new MovieSearch(spy)\n    await search.search(\"query\")\n    assert(spy.calledOnce)\n  })\n})\n"],"file":"movies-search.spec.js"}