{"version":3,"sources":["../../../src/test/integration/movies.spec.js"],"names":["process","env","NODE_ENV","chai","use","chaihttp","describe","it","request","server","get","response","expect","status","to","be","eq","body","an","length","post","send","query"],"mappings":"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","sourcesContent":["process.env.NODE_ENV = 'test'\n\nimport server from '../../app'\nimport chai from 'chai'\nimport chaihttp from 'chai-http'\nchai.use(chaihttp)\n\n\ndescribe('Should check movies routes', async () => {\n  it('check GET /movies reponse', async () => {\n    const request = chai.request(server)\n    const response = await request.get('/movies')\n    chai.expect(response.status).to.be.eq(200)\n    chai.expect(response.body).to.an('array')\n    chai.expect(response.body).to.length(3)\n  })\n\n  it('check POST /movies response', async () => {\n    const request = chai.request(server)\n    const response = await request.post('/movies').send({\n      query: 'Avatar'\n    })\n\n    chai.expect(response.status).to.be.eq(201)\n  })\n\n  it('check POST /movies response with same movie', async () => {\n    const request = chai.request(server)\n    const response = await request.post('/movies').send({\n      query: 'Avatar'\n    })\n\n    chai.expect(response.status).to.be.eq(409)\n  })\n\n\n  it('check GET /movies reponse after adding new movie', async () => {\n    const request = chai.request(server)\n    const response = await request.get('/movies')\n    chai.expect(response.status).to.be.eq(200)\n    chai.expect(response.body).to.an('array')\n    chai.expect(response.body).to.length(4)\n  })\n})\n"],"file":"movies.spec.js"}