{"version":3,"sources":["../../../src/test/integration/comments.spec.js"],"names":["process","env","NODE_ENV","chai","use","chaihttp","describe","it","request","server","get","response","expect","status","to","be","eq","body","an","length","post","send","movie_id","email","author","comment"],"mappings":";;AAEA;;AACA;;AACA;;;;;;;;AAJAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,MAAvB;;AAKAC,iBAAKC,GAAL,CAASC,oBAAT;;AAGAC,QAAQ,CAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,wBAAiC;AAAA;AAAA;AAAA;AAAA;AACvCC,UAAAA,EAAE,CAAC,6BAAD;AAAA;AAAA;AAAA;AAAA,kCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,oBAAAA,OAD0B,GAChBL,iBAAKK,OAAL,CAAaC,eAAb,CADgB;AAAA;AAAA,2BAETD,OAAO,CAACE,GAAR,CAAY,WAAZ,CAFS;;AAAA;AAE1BC,oBAAAA,QAF0B;;AAGhCR,qCAAKS,MAAL,CAAYD,QAAQ,CAACE,MAArB,EAA6BC,EAA7B,CAAgCC,EAAhC,CAAmCC,EAAnC,CAAsC,GAAtC;;AACAb,qCAAKS,MAAL,CAAYD,QAAQ,CAACM,IAArB,EAA2BH,EAA3B,CAA8BI,EAA9B,CAAiC,OAAjC;;AACAf,qCAAKS,MAAL,CAAYD,QAAQ,CAACM,IAArB,EAA2BH,EAA3B,CAA8BK,MAA9B,CAAqC,CAArC;;AALgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAhC,GAAF;AAQAZ,UAAAA,EAAE,CAAC,oDAAD;AAAA;AAAA;AAAA;AAAA,kCAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AACjDC,oBAAAA,OADiD,GACvCL,iBAAKK,OAAL,CAAaC,eAAb,CADuC;AAAA;AAAA,2BAEhCD,OAAO,CAACY,IAAR,CAAa,WAAb,EAA0BC,IAA1B,CAA+B;AACpDC,sBAAAA,QAAQ,EAAE,CAD0C;AAEpDC,sBAAAA,KAAK,EAAE,MAF6C;AAGpDC,sBAAAA,MAAM,EAAE,MAH4C;AAIpDC,sBAAAA,OAAO,EAAE;AAJ2C,qBAA/B,CAFgC;;AAAA;AAEjDd,oBAAAA,QAFiD;;AASvDR,qCAAKS,MAAL,CAAYD,QAAQ,CAACE,MAArB,EAA6BC,EAA7B,CAAgCC,EAAhC,CAAmCC,EAAnC,CAAsC,GAAtC;;AATuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAvD,GAAF;AAYAT,UAAAA,EAAE,CAAC,+BAAD;AAAA;AAAA;AAAA;AAAA,kCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,oBAAAA,OAD4B,GAClBL,iBAAKK,OAAL,CAAaC,eAAb,CADkB;AAAA;AAAA,2BAEXD,OAAO,CAACY,IAAR,CAAa,WAAb,EAA0BC,IAA1B,CAA+B;AACpDC,sBAAAA,QAAQ,EAAE,CAD0C;AAEpDC,sBAAAA,KAAK,EAAE,kBAF6C;AAGpDC,sBAAAA,MAAM,EAAE,MAH4C;AAIpDC,sBAAAA,OAAO,EAAE;AAJ2C,qBAA/B,CAFW;;AAAA;AAE5Bd,oBAAAA,QAF4B;;AASlCR,qCAAKS,MAAL,CAAYD,QAAQ,CAACE,MAArB,EAA6BC,EAA7B,CAAgCC,EAAhC,CAAmCC,EAAnC,CAAsC,GAAtC;;AATkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAlC,GAAF;AAYAT,UAAAA,EAAE,CAAC,kDAAD;AAAA;AAAA;AAAA;AAAA,kCAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/CC,oBAAAA,OAD+C,GACrCL,iBAAKK,OAAL,CAAaC,eAAb,CADqC;AAAA;AAAA,2BAE9BD,OAAO,CAACE,GAAR,CAAY,WAAZ,CAF8B;;AAAA;AAE/CC,oBAAAA,QAF+C;;AAGrDR,qCAAKS,MAAL,CAAYD,QAAQ,CAACE,MAArB,EAA6BC,EAA7B,CAAgCC,EAAhC,CAAmCC,EAAnC,CAAsC,GAAtC;;AACAb,qCAAKS,MAAL,CAAYD,QAAQ,CAACM,IAArB,EAA2BH,EAA3B,CAA8BI,EAA9B,CAAiC,OAAjC;;AACAf,qCAAKS,MAAL,CAAYD,QAAQ,CAACM,IAArB,EAA2BH,EAA3B,CAA8BK,MAA9B,CAAqC,CAArC;;AALqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAArD,GAAF;;AAjCuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC,GAAR","sourcesContent":["process.env.NODE_ENV = 'test'\n\nimport server from '../../app'\nimport chai from 'chai'\nimport chaihttp from 'chai-http'\nchai.use(chaihttp)\n\n\ndescribe('Should check comments routes', async () => {\n  it('check GET /comments reponse', async () => {\n    const request = chai.request(server)\n    const response = await request.get('/comments')\n    chai.expect(response.status).to.be.eq(200)\n    chai.expect(response.body).to.an('array')\n    chai.expect(response.body).to.length(4)\n  })\n\n  it('check POST /comments response with wrong post data', async () => {\n    const request = chai.request(server)\n    const response = await request.post('/comments').send({\n      movie_id: 1,\n      email: 'test',\n      author: 'Test',\n      comment: 'test'\n    })\n\n    chai.expect(response.status).to.be.eq(422)\n  })\n\n  it('check POST /comments response', async () => {\n    const request = chai.request(server)\n    const response = await request.post('/comments').send({\n      movie_id: 1,\n      email: 'test@example.org',\n      author: 'Test',\n      comment: 'test'\n    })\n\n    chai.expect(response.status).to.be.eq(201)\n  })\n\n  it('check GET /comments reponse after saving comment', async () => {\n    const request = chai.request(server)\n    const response = await request.get('/comments')\n    chai.expect(response.status).to.be.eq(200)\n    chai.expect(response.body).to.an('array')\n    chai.expect(response.body).to.length(5)\n  })\n\n})\n"],"file":"comments.spec.js"}